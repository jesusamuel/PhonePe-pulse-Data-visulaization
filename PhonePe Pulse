import streamlit as st
import pandas as pd 
import geopandas as gpd
import matplotlib.pyplot as plt 
import json
import os
import plotly.express as px
import plotly.io as pio
from streamlit_option_menu import option_menu
import mysql.connector 




st.set_page_config(layout='wide')
selected = option_menu("Phonepe | Pulse", ["Home",'Insights','Top Results'], 
        icons=['house','gear'], menu_icon="cast",default_index=0,orientation='horizontal')


st.subheader('',divider='rainbow')


#Agg_state_list--> to get the list of states in India

#<------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>#

#This is to extract the data's to create a dataframe

a,c=st.columns([4,4])
a.subheader('Select below Parameters for Analysis')

d,e,f=a.columns([1,1,1])

year=d.selectbox('',[2018,2019,2020,2021,2022,2023],index=None,placeholder='Select Year')

if year != 2023:
    quater=e.selectbox('',[1,2,3,4],index=None,placeholder='Select Quater')
else:
    quater=e.selectbox('',[1,2,3],index=None,placeholder='Select Quater')
state=['telangana', 'andaman-&-nicobar-islands', 'andhra-pradesh', 'arunachal-pradesh', 'assam', 'bihar', 'chhattisgarh', 'ladakh', 'goa', 'gujarat', 'haryana', 'himachal-pradesh',
       'jammu-&-kashmir', 'jharkhand', 'karnataka', 'kerala', 'lakshadweep', 'madhya-pradesh', 'maharashtra', 'manipur', 'chandigarh', 'puducherry', 'punjab', 'rajasthan', 'sikkim',
       'tamil-nadu', 'tripura', 'uttar-pradesh', 'uttarakhand', 'west-bengal', 'odisha', 'dadra-&-nagar-haveli-&-daman-&-diu', 'meghalaya', 'mizoram', 'nagaland', 'delhi']    
    
state=f.selectbox('',state,index=None,placeholder='Select State')

a.subheader('',divider='grey')


############################################################

mydb = mysql.connector.connect(host='localhost',
                              user='root',
                              password='Jesu@123',
                              database='Phonepe')

mycursor = mydb.cursor()

sql="select * from Aggregate_Transactions;"

data1={}
if year and quater and state:
    sql="select * from Aggregate_Transactions where State=%s and Year=%s and Quater=%s"
    mycursor = mydb.cursor()                       
    mycursor.execute(sql,(state,year,quater))
    data1=mycursor.fetchall()
else:
    mycursor = mydb.cursor()                       
    mycursor.execute(sql)
    data1=mycursor.fetchall()
mycursor.execute("DESC Aggregate_Transactions;")
data2=mycursor.fetchall()
df1=pd.DataFrame(data2)
ad=list(df1[0])                          


df=pd.DataFrame(data=data1,columns=ad) 
a.write(df)

state_id={}
with open('/Users/jesusamuel/Downloads/states_india.geojson','r') as anyfile:
    data= json.load(anyfile)

for i in data['features']:
    i["id"] = i["properties"]["state_code"]
    state_id[i["properties"]["st_nm"]] = i["id"]
    

df['id']=df['State'].apply(lambda x:state_id[x])
pio.renderers.default='chrome'
h1,h2,h=c.columns([1.5,2,1])
h2.subheader('Geo-Visualization Map')
fig = px.choropleth(df,geojson=data,locations='id',
                    color='id',color_continuous_scale="twilight",
                           range_color=(0, 35),
                    hover_name='State',
                    hover_data=['Year','Quater','Transacion_count','Transacion_amount'],
                    scope="asia",labels={'id':''},
                    projection='mercator',
                    
                    
                    height=0,width=800
   
)
fig.update_geos(fitbounds='locations',visible=False)

fig.update_layout(dragmode=False,margin={"r":0,"t":0,"l":0,"b":0},)#coloraxis_showscale=False)
fig.update_layout(geo=dict(bgcolor= 'rgba(0,0,0,0)'))
c.write('\n\n')
c.write('')
c.write(fig)
